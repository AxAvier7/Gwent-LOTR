effect {
    Name: "Damage",
    Params: {
        amount: Number
    }
    Action: (targets, context) => {
        for target in targets {
            i = 0;
            while(i++ < amount)
                target.Power -= 1;
        };
    }
}

effect {
    Name: "Draw",
    Action: (targets, context) => {
        topCard = context.Deck.Pop();
        context.Hand.Add(topCard);
        context.Hand.Shuffle();
        }
    }

effect {
    Name: "ReturnToDeck",
    Action: (targets, context) => {
        for target in targets {
            owner = target.Owner;
            deck = context.DeckOfPlayer(owner);
            deck.Push(target);
            deck.Shuffle();
            context.Board.Remove(target);
        };
    }
}